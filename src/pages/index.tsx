import { useState } from 'react';
import { format, isSameDay, isSameMonth, addMonths } from 'date-fns';
import Head from 'next/head';
import { generateMonth } from '@/utils/calendar-gen';

function DayNames() {
  return (
    <div className={'grid grid-cols-7'}>
      {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(
        (dayName, i) => (
          <div
            key={`${dayName}${i}`}
            className={'flex justify-center items-center w-16 h-16 bg-blue-300 border border-blue-300'}
            >
            {dayName}
          </div>
        ),
      )}
    </div>
  );
}



export default function Calendar() {
  const [selectedDate, setSelectedDate] = useState(new Date());
  const calData: Array<Array<Date>> = generateMonth(selectedDate)();

  function dayColor(day: Date) {
    if (!isSameMonth(day, selectedDate)) {
      return 'text-gray-400';
    }
    if (isSameDay(day, selectedDate)) {
      return 'bg-blue-100'
    }
  }

  function nextMonth(){
    setSelectedDate(addMonths(selectedDate, 1))
  }

  function prevMonth(){
    setSelectedDate(addMonths(selectedDate, -1))
  }

  return (
    <div >
      <Head>
        <title>Next-Calendar</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main >
        
        <div className={'box-border flex m-8 bg-white'}>
      
          <div className={'rounded-md border'}>
            <div className={'flex flex-row justify-center space-x-7'}>
              <button
                className={'hover:text-sky-700 '}
                onClick={prevMonth}
              >
                {'<<'}
              </button>
              <h1 className={'flex'}>
                {format(selectedDate, 'MMMM')}
              </h1>
              <button
                className={'hover:text-sky-700'}
                onClick={nextMonth}
              >
              {'>>'}
              </button>
            </div>
            <DayNames/>
            <ul>
              {calData.map((week, i) => (
                <div
                  key={i}
                  className={'grid grid-cols-7'}
                >
                  {
                    week.map((day, j) => (
                      <div
                        key={j}
                        className={`flex justify-center items-center w-16 h-16 border border-blue-300 hover:bg-sky-100 ${dayColor(day)}`}
                        onClick={() => setSelectedDate(day)}
                      >
                        {format(day, 'dd')}
                      </div>
                    ))
                  }
                </div>
              ))}
            </ul>
          </div>
        </div>
      </main>
    </div>
  );
}
